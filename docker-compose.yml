version: '3.8'

services:
  redis-cache:
    image: redis:alpine3.15
    container_name: redis-cache-db
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - $PWD/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass renos1987

  springboot-docker-container:
    container_name: springboot-docker-container
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - redis-cache
    ports:
      - "9088:8088"
    restart: always
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/mydatabase
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - REDIS_HOST=redis-cache
      - REDIS_PORT=6379
      - REDIS_PASSWORD=renos1987
    command: ["./wait-for-it.sh", "postgres:5432", "--", "./wait-for-it.sh", "redis-cache:6379", "--", "java", "-jar", "/app/app.jar"]
    networks:
      - springboot-net

  postgres:
    image: postgres:alpine
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - springboot-net

networks:
  springboot-net:
    driver: bridge

volumes:
  postgres-data:
